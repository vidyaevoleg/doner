var Topdoner = angular.module('Topdoner', ['yaMap','ui.router','templates','ngSanitize']);
Topdoner.filter('isRated', function () {
  return function(items) {
    return items.filter(function(item){
      return parseInt(item.properties.rating) > 0
    })
  }
})
Topdoner.filter('getPlaceById', function() {
  return function(input, id) {
    var i=0, len=input.length;
    for (; i<len; i++) {
      if (input[i].properties.id == id) {
        return input[i];
      }
    }
    return null;
  }
});

//Topdoner.filter('limitHtml', function() {
//	return function(text, limit) {
//		
////		var changedString = String(text).replace(/<[^>]+>/gm, '');
////		var length = changedString.length;
////		return changedString.length > limit ? changedString.substr(0, limit - 1) : changedString;
//});
	
Topdoner.directive('starRating',
	function($compile) {
		return {
			restrict : 'A',
			template : '<ul class="rating">'
					 + '	<li ng-repeat="star in stars" ng-class="star" ng-click="toggle($index)">'
					 + '\u2605'
					 + '</li>'
					 + '</ul>',
			scope : {
				ratingValue : '=',
				max : '=',
				onRatingSelected : '&'
			},
			link : function(scope, elem, attrs) {
				var updateStars = function() {
					scope.stars = [];
					for ( var i = 0; i < scope.max; i++) {
						scope.stars.push({
							filled : i < scope.ratingValue
						});
					}
				};
				
				scope.toggle = function(index) {
					scope.ratingValue = index + 1;
					scope.onRatingSelected({
						rating : index + 1
					});
				};
				
				scope.$watch('ratingValue',
					function(oldVal, newVal) {
						if (newVal) {
							updateStars();
						}
					}
				);
			}
		};
	}
);

Topdoner.config(['$stateProvider','$urlRouterProvider',
	function($stateProvider, $urlRouterProvider) {
	  $stateProvider
		.state('home', {
		  resolve: {
			  places: ['places','$stateParams','$rootScope', function(places,$stateParams,$rootScope){
			    return places.getPlaces().then(function(data){
					$rootScope.places = data;
			    })
			  }],
			  current_user: ['users','$rootScope', function(users,$rootScope){
			    return users.getCurrentUser().then(function(data){
			    	$rootScope.current_user = data;
			    })
			  }]
			},
		  url: '/home',
		  templateUrl: "<%= asset_path('templates/index.html.erb') %>",
		  controller: 'PlacesCtrl'
		})
		.state('places', {
		  url: '/places/{id}',
		  templateUrl: "<%= asset_path('templates/place.html.erb') %>",
		  controller: 'PlaceCtrl',
		  resolve: {
				place: ['places','$stateParams','$filter','$rootScope', function(places,$stateParams,$filter,$rootScope){
			    return places.getPlaces().then(function(data){
						$rootScope.place = $filter('getPlaceById')(data, $stateParams.id);
						$rootScope.places = data;
						$rootScope.mapCenter = $rootScope.place.geometry.coordinates;
			    })
			  }],		  
			  // place: ['$stateParams','$rootScope', function($stateParams,$rootScope){
			  // 	console.log($rootScope.places)
					// return $rootScope.place = $filter('getPlaceById')($rootScope.places, $stateParams.id)
			  // }],
			  reviews: ['places','$stateParams','$rootScope', function(places,$stateParams,$rootScope){
			    return places.getReviews($stateParams.id).then(function(res){
						$rootScope.reviews = res.data;
			    });
			  }],		  
			  current_user: ['users','$rootScope', function(users,$rootScope){
			    return users.getCurrentUser().then(function(data){
					$rootScope.current_user = data;
			    })
			  }]
			},
		  url: '/places/{id}',
		  templateUrl: "<%= asset_path('templates/place.html.erb') %>",
		  controller: 'PlaceCtrl'
		})
		.state('new_place', {
		  resolve: {
				place: ['places','$stateParams','$filter','$rootScope', function(places,$stateParams,$filter,$rootScope){
			    return places.getPlaces().then(function(data){
						$rootScope.place = $filter('getPlaceById')(data, $stateParams.id)
						$rootScope.places = data				
			    })
			  }],		
			  current_user: ['users','$rootScope', function(users,$rootScope){
			    return users.getCurrentUser().then(function(data){
			    	$rootScope.current_user = data
			    })
			  }]
			},
		  url: '/create_place',
		  templateUrl: "<%= asset_path('templates/new_place.html.erb') %>",
		  controller: 'NewPlaceCtrl'
		})
		.state('new_review', {
		  resolve: {
				place: ['places','$stateParams','$filter','$rootScope', function(places,$stateParams,$filter,$rootScope){
			    return places.getPlaces().then(function(data){
						$rootScope.place = $filter('getPlaceById')(data, $stateParams.id)
						$rootScope.places = data				
			    })
			  }],				  
			  current_user: ['users','$rootScope', function(users,$rootScope){
			    return users.getCurrentUser().then(function(data){
			    	$rootScope.current_user = data
			    })
			  }]
			},
		  url: '/places/{id}/new_review',
		  templateUrl: "<%= asset_path('templates/new_review.html.erb') %>",
		  controller: 'NewReviewCtrl'
		})
		.state('edit_review', {
		  resolve: {
			  review: ['reviews','$stateParams','$rootScope', function(reviews,$stateParams,$rootScope){
			    return reviews.getReview($stateParams.review_id).then(function(res){
			    	$rootScope.review = res.review
			    })
			  }],
				place: ['places','$stateParams','$filter','$rootScope', function(places,$stateParams,$filter,$rootScope){
			    return places.getPlaces().then(function(data){
						$rootScope.place = $filter('getPlaceById')(data, $stateParams.id)
						$rootScope.places = data				
			    })
			  }],	
			  current_user: ['users','$rootScope', function(users,$rootScope){
			    return users.getCurrentUser().then(function(data){
			    	$rootScope.current_user = data
			    })
			  }]
			},
		  url: '/places/{id}/edit_review/{review_id}',
		  templateUrl: "<%= asset_path('templates/edit_review.html.erb') %>",
		  controller: 'EditReviewCtrl'
		})
		.state('edit_place', {
		  resolve: {
				place: ['places','$stateParams','$filter','$rootScope', function(places,$stateParams,$filter,$rootScope){
			    return places.getPlaces().then(function(data){
						$rootScope.place = $filter('getPlaceById')(data, $stateParams.id)
						$rootScope.places = data				
			    })
			  }],	
			  current_user: ['users','$rootScope', function(users,$rootScope){
			    return users.getCurrentUser().then(function(data){
			    	$rootScope.current_user = data
			    })
			  }]
			},
		  url: '/places/{id}/edit_place',
		  templateUrl: "<%= asset_path('templates/edit_place.html.erb') %>",
		  controller: 'EditPlaceCtrl'
		})
		.state('new_feedback', {
		  resolve: {
				place: ['places','$stateParams','$filter','$rootScope', function(places,$stateParams,$filter,$rootScope){
			    return places.getPlaces().then(function(data){
						$rootScope.place = $filter('getPlaceById')(data, $stateParams.id)
						$rootScope.places = data				
			    })
			  }],	
			  current_user: ['users','$rootScope', function(users,$rootScope){
			    return users.getCurrentUser().then(function(data){
			    	$rootScope.current_user = data
			    })
			  }]
			},
		  url: '/write_us',
		  templateUrl: "<%= asset_path('templates/new_feedback.html.erb') %>",
		  controller: 'FeedbackCtrl'
		})
	  $urlRouterProvider.otherwise('home');
}])
